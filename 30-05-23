int n, m;
    int row[4] = {0, -1, 0, 1}, col[4] = {-1, 0, 1, 0};
public:
    //function to check if we can extend in 4 directions
    bool expandable(int ind, int x, int y, string word, vector<vector<char>>& board){
        return (x >= 0 && y >= 0 && x < n && y < m && board[x][y] == word[ind]);
    }
    
    bool dfs(int ind, int x, int y, string word, vector<vector<char>>& board){
        if(ind == word.size()-1)      return true;
        char ch = board[x][y];
        board[x][y] = '#';
        
        for(int k=0;k<4;k++){
            int x_ = x+row[k], y_ = y+col[k];
            if(expandable(ind+1, x_, y_, word, board)){
                if(dfs(ind+1, x_, y_, word, board))     return true;
            }
        }
        board[x][y] = ch;
        return false;
    }
    
    bool isWordExist(vector<vector<char>>& board, string word) {
        // Code here
        n = board.size(), m = board[0].size();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j] == word[0]){
                    if(dfs(0, i, j, word, board)) return true;
                }
            }
        }
        return false;
    }
